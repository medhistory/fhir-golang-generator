map "http://hl7.org/fhir/StructureMap/SubstancePolymer4to3" = "R4 to R3 Conversion for SubstancePolymer"

uses "http://hl7.org/fhir/StructureDefinition/SubstancePolymer" alias SubstancePolymer as source
uses "http://hl7.org/fhir/3.0/StructureDefinition/SubstancePolymer" alias SubstancePolymerR3 as target

imports "http://hl7.org/fhir/StructureMap/*4to3"

group SubstancePolymer(source src : SubstancePolymerR3, target tgt : SubstancePolymer) extends DomainResource <<type+>> {
  src.class -> tgt.class;
  src.geometry -> tgt.geometry;
  src.copolymerConnectivity -> tgt.copolymerConnectivity;
  src.modification -> tgt.modification;
  src.monomerSet as s -> tgt.monomerSet as t then SubstancePolymerMonomerSet(s, t);
  src.repeat as s -> tgt.repeat as t then SubstancePolymerRepeat(s, t);
}

group SubstancePolymerMonomerSet(source src : SubstancePolymerR3, target tgt : SubstancePolymer) extends BackboneElement <<type+>> {
  src.ratioType -> tgt.ratioType;
  src.startingMaterial as s -> tgt.startingMaterial as t then SubstancePolymerMonomerSetStartingMaterial(s, t);
}

group SubstancePolymerMonomerSetStartingMaterial(source src : SubstancePolymerR3, target tgt : SubstancePolymer) extends BackboneElement <<type+>> {
  src.material -> tgt.material;
  src.type -> tgt.type;
  src.isDefining -> tgt.isDefining;
  src.amount -> tgt.amount;
}

group SubstancePolymerRepeat(source src : SubstancePolymerR3, target tgt : SubstancePolymer) extends BackboneElement <<type+>> {
  src.numberOfUnits -> tgt.numberOfUnits;
  src.averageMolecularFormula -> tgt.averageMolecularFormula;
  src.repeatUnitAmountType -> tgt.repeatUnitAmountType;
  src.repeatUnit as s -> tgt.repeatUnit as t then SubstancePolymerRepeatRepeatUnit(s, t);
}

group SubstancePolymerRepeatRepeatUnit(source src : SubstancePolymerR3, target tgt : SubstancePolymer) extends BackboneElement <<type+>> {
  src.orientationOfPolymerisation -> tgt.orientationOfPolymerisation;
  src.repeatUnit -> tgt.repeatUnit;
  src.amount -> tgt.amount;
  src.degreeOfPolymerisation as s -> tgt.degreeOfPolymerisation as t then SubstancePolymerRepeatRepeatUnitDegreeOfPolymerisation(s, t);
  src.structuralRepresentation as s -> tgt.structuralRepresentation as t then SubstancePolymerRepeatRepeatUnitStructuralRepresentation(s, t);
}

group SubstancePolymerRepeatRepeatUnitDegreeOfPolymerisation(source src : SubstancePolymerR3, target tgt : SubstancePolymer) extends BackboneElement <<type+>> {
  src.degree -> tgt.degree;
  src.amount -> tgt.amount;
}

group SubstancePolymerRepeatRepeatUnitStructuralRepresentation(source src : SubstancePolymerR3, target tgt : SubstancePolymer) extends BackboneElement <<type+>> {
  src.type -> tgt.type;
  src.representation -> tgt.representation;
  src.attachment -> tgt.attachment;
}

