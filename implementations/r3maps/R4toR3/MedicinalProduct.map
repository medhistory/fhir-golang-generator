map "http://hl7.org/fhir/StructureMap/MedicinalProduct4to3" = "R4 to R3 Conversion for MedicinalProduct"

uses "http://hl7.org/fhir/StructureDefinition/MedicinalProduct" alias MedicinalProduct as source
uses "http://hl7.org/fhir/3.0/StructureDefinition/MedicinalProduct" alias MedicinalProductR3 as target

imports "http://hl7.org/fhir/StructureMap/*4to3"

group MedicinalProduct(source src : MedicinalProductR3, target tgt : MedicinalProduct) extends DomainResource <<type+>> {
  src.identifier -> tgt.identifier;
  src.type -> tgt.type;
  src.domain -> tgt.domain;
  src.combinedPharmaceuticalDoseForm -> tgt.combinedPharmaceuticalDoseForm;
  src.additionalMonitoringIndicator -> tgt.additionalMonitoringIndicator;
  src.specialMeasures -> tgt.specialMeasures;
  src.paediatricUseIndicator -> tgt.paediatricUseIndicator;
  src.productClassification -> tgt.productClassification;
  src.marketingAuthorization -> tgt.marketingAuthorization;
  src.packagedMedicinalProduct -> tgt.packagedMedicinalProduct;
  src.pharmaceuticalProduct -> tgt.pharmaceuticalProduct;
  src.clinicalParticulars -> tgt.clinicalParticulars;
  src.attachedDocument -> tgt.attachedDocument;
  src.masterFile -> tgt.masterFile;
  src.contact -> tgt.contact;
  src.clinicalTrial -> tgt.clinicalTrial;
  src.name as s -> tgt.name as t then MedicinalProductName(s, t);
  src.crossReference -> tgt.crossReference;
  src.manufacturingBusinessOperation as s -> tgt.manufacturingBusinessOperation as t then MedicinalProductManufacturingBusinessOperation(s, t);
  src.orphanDesignation as s -> tgt.orphanDesignation as t then MedicinalProductOrphanDesignation(s, t);
}

group MedicinalProductName(source src : MedicinalProductR3, target tgt : MedicinalProduct) extends BackboneElement <<type+>> {
  src.fullName -> tgt.fullName;
  src.namePart as s -> tgt.namePart as t then MedicinalProductNameNamePart(s, t);
  src.countryLanguage as s -> tgt.countryLanguage as t then MedicinalProductNameCountryLanguage(s, t);
}

group MedicinalProductNameNamePart(source src : MedicinalProductR3, target tgt : MedicinalProduct) extends BackboneElement <<type+>> {
  src.part -> tgt.part;
  src.type -> tgt.type;
}

group MedicinalProductNameCountryLanguage(source src : MedicinalProductR3, target tgt : MedicinalProduct) extends BackboneElement <<type+>> {
  src.country -> tgt.country;
  src.jurisdiction -> tgt.jurisdiction;
  src.language -> tgt.language;
}

group MedicinalProductManufacturingBusinessOperation(source src : MedicinalProductR3, target tgt : MedicinalProduct) extends BackboneElement <<type+>> {
  src.operationType -> tgt.operationType;
  src.authorisationReferenceNumber -> tgt.authorisationReferenceNumber;
  src.effectiveDate -> tgt.effectiveDate;
  src.confidentialityIndicator -> tgt.confidentialityIndicator;
  src.manufacturer -> tgt.manufacturer;
  src.regulator -> tgt.regulator;
}

group MedicinalProductOrphanDesignation(source src : MedicinalProductR3, target tgt : MedicinalProduct) extends BackboneElement <<type+>> {
  src.identifier -> tgt.identifier;
  src.intendedUse -> tgt.intendedUse;
  src.indication -> tgt.indication;
  src.status -> tgt.status;
  src.date -> tgt.date;
  src.species -> tgt.species;
}

