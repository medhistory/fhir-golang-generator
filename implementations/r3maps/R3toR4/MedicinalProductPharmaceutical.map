map "http://hl7.org/fhir/StructureMap/MedicinalProductPharmaceutical3to4" = "R3 to R4 Conversions for MedicinalProductPharmaceutical"

uses "http://hl7.org/fhir/3.0/StructureDefinition/MedicinalProductPharmaceutical" alias MedicinalProductPharmaceuticalR3 as source
uses "http://hl7.org/fhir/StructureDefinition/MedicinalProductPharmaceutical" alias MedicinalProductPharmaceutical as target

imports "http://hl7.org/fhir/StructureMap/*3to4"

group MedicinalProductPharmaceutical(source src : MedicinalProductPharmaceuticalR3, target tgt : MedicinalProductPharmaceutical) extends DomainResource <<type+>> {
  src.identifier -> tgt.identifier;
  src.administrableDoseForm -> tgt.administrableDoseForm;
  src.unitOfPresentation -> tgt.unitOfPresentation;
  src.ingredient -> tgt.ingredient;
  src.device -> tgt.device;
  src.characteristics as s -> tgt.characteristics as t then MedicinalProductPharmaceuticalCharacteristics(s, t);
  src.routeOfAdministration as s -> tgt.routeOfAdministration as t then MedicinalProductPharmaceuticalRouteOfAdministration(s, t);
}

group MedicinalProductPharmaceuticalCharacteristics(source src : MedicinalProductPharmaceuticalR3, target tgt : MedicinalProductPharmaceutical) extends BackboneElement <<type+>> {
  src.code -> tgt.code;
  src.status -> tgt.status;
}

group MedicinalProductPharmaceuticalRouteOfAdministration(source src : MedicinalProductPharmaceuticalR3, target tgt : MedicinalProductPharmaceutical) extends BackboneElement <<type+>> {
  src.code -> tgt.code;
  src.firstDose -> tgt.firstDose;
  src.maxSingleDose -> tgt.maxSingleDose;
  src.maxDosePerDay -> tgt.maxDosePerDay;
  src.maxDosePerTreatmentPeriod -> tgt.maxDosePerTreatmentPeriod;
  src.maxTreatmentPeriod -> tgt.maxTreatmentPeriod;
  src.targetSpecies as s -> tgt.targetSpecies as t then MedicinalProductPharmaceuticalRouteOfAdministrationTargetSpecies(s, t);
}

group MedicinalProductPharmaceuticalRouteOfAdministrationTargetSpecies(source src : MedicinalProductPharmaceuticalR3, target tgt : MedicinalProductPharmaceutical) extends BackboneElement <<type+>> {
  src.code -> tgt.code;
  src.withdrawalPeriod as s -> tgt.withdrawalPeriod as t then MedicinalProductPharmaceuticalRouteOfAdministrationTargetSpeciesWithdrawalPeriod(s, t);
}

group MedicinalProductPharmaceuticalRouteOfAdministrationTargetSpeciesWithdrawalPeriod(source src : MedicinalProductPharmaceuticalR3, target tgt : MedicinalProductPharmaceutical) extends BackboneElement <<type+>> {
  src.tissue -> tgt.tissue;
  src.value -> tgt.value;
  src.supportingInformation -> tgt.supportingInformation;
}

